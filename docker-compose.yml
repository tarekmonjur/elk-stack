version: "3.2"

networks:
  elk-stack:
    driver: bridge

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    restart: always
    ports:
      - ${ES_PORT}:9200
      - 9300:9300
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
    networks:
      - elk-stack  
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xmx512m -Xms512m
      - cluster.name=${CLUSTER_NAME}
      - node.name=${NODE_NAME}
      # - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - ingest.geoip.downloader.enabled=false
    # mem_limit: ${MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1

  logstash:
    image: docker.elastic.co/logstash/logstash:${STACK_VERSION}
    ports:
      - 5000:5000
      - ${LS_PORT}:9600
    volumes:
      - ./logstash/config/:/usr/share/logstash/config/
      - ./logstash/pipeline/:/usr/share/logstash/pipeline/
      - ./logstash/data/access.log:/usr/share/logstash/data/access.log
    networks:
      - elk-stack
    depends_on:
      - elasticsearch
    environment:
      LS_JAVA_OPTS: "-Xmx512m -Xms512m"
      ES_HOST: ${ES_HOST}
      ES_PORT: ${ES_PORT}

  kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    restart: always
    depends_on:
      - elasticsearch
    ports:
      - ${KIBANA_PORT}:5601
    networks:
      - elk-stack
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://${ES_HOST}:${ES_PORT}

volumes:
  elastic-data:
    driver: local
